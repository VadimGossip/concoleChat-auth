version: "3.9"

volumes:
  postgres_volume:
  redis_volume:

services:
  pg-auth:
    image: postgres:14-alpine3.17
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=auth-db
    ports:
      - "5432:5432"
    restart: always
    networks:
      - auth-network
    volumes:
      - postgres_volume:/var/lib/postgresql/data
  redis-auth:
    image: redis:7.2.5-alpine3.20
    ports:
      - "6379:6379"
    restart: always
    networks:
      - auth-network
    volumes:
      - redis_volume:/var/lib/redis/data
  auth:
    image: auth
    container_name: auth
    environment:
     - APP_GRPC_PORT=8086
     - APP_HTTP_PORT=8080
     - APP_SWAGGER_PORT=8090
     - PG_HOST=pg-auth
     - PG_PORT=5432
     - PG_USERNAME=postgres
     - PG_NAME=auth-db
     - PG_SSLMODE=disable
     - PG_PASSWORD=postgres
     - REDIS_HOST=redis-auth
     - REDIS_PORT=6379
     - REDIS_DB=0
     - REDIS_READ_TIMEOUT_SEC=300
     - REDIS_WRITE_TIMEOUT_SEC=300
     - USER_CACHE_EXPIRE_SEC=300
     - USER_KAFKA_TOPIC=user
     - KAFKA_BROKERS=kafka1:9092, kafka2:9093, kafka3:9094
     - KAFKA_GROUP_ID=auth
    ports:
      - 8080:8080
      - 8086:8086
      - 8090:8090
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    networks:
     - auth-network
    depends_on:
      - pg-auth
      - redis-auth
  migrator:
    build:
      context: .
      dockerfile: migration.Dockerfile
    restart: on-failure
    environment:
      - DB_HOST=pg-auth
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_NAME=auth-db
      - DB_SSLMODE=disable
      - DB_PASSWORD=postgres
      - MIGRATION_DIR=./migrations
    networks:
      - auth-network
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181" # порт для клиентских соединений Zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181 # порт для клиентских соединений Zookeeper
      ZOOKEEPER_TICK_TIME: 2000 # основной интервал времени (в миллисекундах), используемый Zookeeper
    networks:
      - auth-network
  kafka1:
    image: confluentinc/cp-kafka:7.6.1
    hostname: kafka1
    container_name: kafka1
    depends_on:
      - zookeeper # указывает, что Kafka зависит от сервиса Zookeeper и будет запущен после него
    ports:
      - "9092:9092" # порт для клиентских соединений Kafka
    environment:
      KAFKA_BROKER_ID: 1 # уникальный идентификатор брокера Kafka
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181' # адрес подключения к Zookeeper
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT # указывает протоколы безопасности для слушателей
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092 # указывает, какие адреса будут использоваться для общения с Kafka
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3 # фактор репликации топика
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0 # время задержки перед началом перебалансировки группы
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2 # минимальное количество реплик, которые должны быть в синхронизации для топика состояния транзакции
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3 # фактор репликации топика состояния транзакции
    networks:
      - auth-network
  kafka2:
    image: confluentinc/cp-kafka:7.6.1
    hostname: kafka2
    container_name: kafka2
    depends_on:
      - zookeeper # указывает, что Kafka зависит от сервиса Zookeeper и будет запущен после него
    ports:
      - "9093:9093" # порт для клиентских соединений Kafka
    environment:
      KAFKA_BROKER_ID: 2 # уникальный идентификатор брокера Kafka
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181' # адрес подключения к Zookeeper
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT # указывает протоколы безопасности для слушателей
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29093,PLAINTEXT_HOST://localhost:9093 # указывает, какие адреса будут использоваться для общения с Kafka
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3 # фактор репликации топика смещений
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0 # время задержки перед началом перебалансировки группы
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2 # минимальное количество реплик, которые должны быть в синхронизации для топика состояния транзакции
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3 # фактор репликации топика состояния транзакции
    networks:
      - auth-network
  kafka3:
    image: confluentinc/cp-kafka:7.6.1
    hostname: kafka3
    container_name: kafka3
    depends_on:
      - zookeeper # указывает, что Kafka зависит от сервиса Zookeeper и будет запущен после него
    ports:
      - "9094:9094" # порт для клиентских соединений Kafka
    environment:
      KAFKA_BROKER_ID: 3 # уникальный идентификатор брокера Kafka
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181' # адрес подключения к Zookeeper
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT # указывает протоколы безопасности для слушателей
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29094,PLAINTEXT_HOST://localhost:9094 # указывает, какие адреса будут использоваться для общения с Kafka
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3 # фактор репликации топика смещений
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0 # время задержки перед началом перебалансировки группы
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2 # минимальное количество реплик, которые должны быть в синхронизации для топика состояния транзакции
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3 # фактор репликации топика состояния транзакции
    networks:
      - auth-network
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - "8082:8080" # порт для клиентских соединений Kafka UI
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - auth-network

networks:
  auth-network:
    driver: bridge